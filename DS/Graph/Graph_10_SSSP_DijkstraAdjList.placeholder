import java.util.LinkedList;
import java.util.PriorityQueue;

class Graph_10_SSSP_DijkstraAdjList {
    static class AdjacencyListNode {
        int destination;
        int weight;
    }
    static class Graph {
        private int numVertices;
        private LinkedList<AdjacencyListNode> adjList[];

        Graph(int numVertices) {
            this.numVertices = numVertices;
            adjList = new LinkedList[numVertices];

            for (int i = 0; i < numVertices; i++) {
                adjList[i] = new LinkedList<>();
            }
        }

        void dijkstra(int source) {
            int [] distances = new int[numVertices];
            for (int i = 0; i < numVertices; i++) {
                distances = Integer.MAX_VALUE;
            }
            distances[source] = 0;

            int [] parent = new int[numVertices];
            parent[source] = -1;

            PriorityQueue<Integer> priorityQueue = new PriorityQueue<>();

            for (int i = 0; i < parent.length; i++) {
                
            }
        }
    }
    public static void main(String[] args) {
    }
}